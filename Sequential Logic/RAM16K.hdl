// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/*
  Memory of 16K registers, each 16 bit-wide. Out holds the value
  stored at the memory location specified by address. If load==1, then 
  the in value is loaded into the memory location specified by address 
  (the loaded value will be emitted to out from the next time step onward).
*/

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    
	DMux4Way(in=load ,sel=address[12..13] , a=DmuxOut1, b=DmuxOut2, c=DmuxOut3, d=DmuxOut4);
	
	
	RAM4K(in=in, load=DmuxOut1, address=address[0..11] , out=outReg1);
	RAM4K(in=in, load=DmuxOut2, address=address[0..11] , out=outReg2);
	RAM4K(in=in, load=DmuxOut3, address=address[0..11] , out=outReg3);
	RAM4K(in=in, load=DmuxOut4, address=address[0..11] , out=outReg4);
	

	Mux4Way16(a=outReg1, b=outReg2, c=outReg3, d=outReg4, sel=address[12..13], out=out );

}